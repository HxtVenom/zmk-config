/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#define LWR 1
#define RSE 2
#define ADJ 3

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | ESC  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ENT  |
//                    | GUI | LWR | SPC |   | CTRL| RSE  | ALT |
                        bindings = <
   &kp TAB    &kp Q   &kp W     &kp E   &kp R   &kp T     &kp Y   &kp U     &kp I       &kp O     &kp P     &kp BSPC
   &kp ESC    &kp A   &kp S     &kp D   &kp F   &kp G     &kp H   &kp J     &kp K       &kp L     &kp SEMI  &kp SQT
   &kp LSHFT  &kp Z   &kp X     &kp C   &kp V   &kp B     &kp N   &kp M     &kp COMMA   &kp DOT   &kp FSLH  &kp ENTER
                      &kp LGUI  &mo LWR   &kp SPACE               &kp LCTRL &mo RSE       &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |     |  UP |     |     |     |   |  ^  |  7  |  8  |  9  |  *  | BKSP |
// | to(0)| LEFT| DOWN|RIGHT|     |     |   |  =  |  4  |  5  |  6  |  -  |      |
// | SHFT |     |     |     |     |     |   |  .  |  1  |  2  |  3  |  +  |  /   |
//                    | GUI |     | SPC |   | ENT |     |  0  |
                        bindings = <
   &kp TAB    &none      &kp UP     &none       &none   &none         &kp CARET   &kp KP_7    &kp KP_8  &kp KP_9  &kp KP_MULTIPLY   &kp BSPC
   &to 0      &kp LEFT   &kp DOWN   &kp RIGHT   &trans  &trans        &kp EQUAL   &kp KP_4    &kp KP_5  &kp KP_6  &kp KP_MINUS      &none
   &kp LSHFT  &trans     &trans     &trans      &trans  &trans        &kp KP_DOT  &kp KP_1    &kp KP_2  &kp KP_3  &kp KP_PLUS       &kp KP_SLASH
                          	        &kp LGUI    &trans  &kp SPACE     &kp RET     &trans      &kp KP_0
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  !   |  @  |  #  |  $  |  %  |  ^  |   |  &  |  *  |  (  |  )  |  -  |  =   |
// | GRAVE|     |     |     |     |     |   |  -  |  =  |     |  {  |  }  |  \   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp EXCL  &kp AT   &kp HASH  &kp DLLR  &kp PRCNT   &kp CARET       &kp AMPS    &kp KP_MULTIPLY   &kp LPAR  &kp RPAR  &kp MINUS   &kp EQUAL
   &kp GRAVE &trans   &trans    &kp LBKT  &kp RBKT    &trans          &kp MINUS   &kp EQUAL         &none     &kp LBRC  &kp RBRC    &kp BSLH
   &kp LSHFT &trans   &trans    &trans    &trans      &trans          &kp UNDER   &kp PLUS          &none     &none     &none       &none
                    	          &kp LGUI  &trans      &kp SPACE       &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
